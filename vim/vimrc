filetype plugin indent on

" Do not put backups and swap files in the currenty directory.
set noswapfile
set backupdir=~/.backup,.,/tmp
set directory=~/.backup,.,/tmp

set nocompatible

syntax on

set modelines=0

set tabstop=2
set shiftwidth=2
"set softtabstop=22
set expandtab

set smarttab

set encoding=utf-8
set scrolloff=3
set autoindent
set showmode
set showcmd
set hidden
set wildmenu
set wildmode=list:longest
set visualbell
set cursorline
set ttyfast
set ruler
set backspace=indent,eol,start
set laststatus=2
set number
set relativenumber
set undofile

let mapleader = ","

set ignorecase
set smartcase
set gdefault
set incsearch
set showmatch
set hlsearch
nnoremap Q <Nop>
nnoremap <leader><leader> <C-^>
nnoremap <leader><space> :noh<cr>
nnoremap <tab> %
vnoremap <tab> %

set wrap
set textwidth=500
set formatoptions=qrn1
set colorcolumn=+1

set list
set listchars=tab:▸\ ,eol:¬

nnoremap ; :

map j gj
map k gk

nnoremap <leader>W :%s/\s\+$//<cr>:let @/=''<CR>

nnoremap <leader>q gqip

command W w

" Toggle paste
set pastetoggle=<F2>
nnoremap <silent> <leader>n :set paste!<CR>

" Vertical split
nnoremap <leader>v <C-w>v<C-w>l

" Horizontal split
nnoremap <leader>w <C-w><C-s><C-w>j

" Simpler window navigation
nnoremap <C-h> <C-w>h
nnoremap <C-j> <C-w>j
nnoremap <C-k> <C-w>k
nnoremap <C-l> <C-w>l

" Close the current buffer
map <leader>bd :Bclose<cr>

" Close all the buffers
map <leader>ba :bufdo bd<cr>

" Useful mappings for managing tabs
map <leader>tn :tabnew<cr>
map <leader>to :tabonly<cr>
map <leader>tc :tabclose<cr>
map <leader>tm :tabmove 
map <leader>t<leader> :tabnext 

map 0 ^

" spell checking
" Pressing ,ss will toggle and untoggle spell checking
map <leader>ss :setlocal spell!<cr>


set background=dark

colorscheme zenburn

if exists('g:colors_name') && colors_name == 'zenburn'
  if has('gui_macvim')
    set transparency=0
  endif

  if !has('gui_running') && $TERM_PROGRAM == 'Apple_Terminal'
    let g:solarized_termcolors = &t_Co
    colorscheme solarized
  endif

  " call togglebg#map("<F2>")
endif

" git
nnoremap <leader>gs :Gstatus<cr>
nnoremap <leader>gc :Gcommit<cr>
nnoremap <leader>gl :Glog<cr>
nnoremap <leader>go :Git stash pop<cr>
nnoremap <leader>gp :Git push<cr>
nnoremap <leader>gt :Git stash<cr>
nnoremap <leader>gu :Git pull<cr>

" quickfix list
nnoremap <leader>f :cwindow<cr>

" ctrl-p
nnoremap <leader>p :CtrlP<cr>
nnoremap <leader>t :CtrlPTag<cr>
let g:ctrlp_cmd = 'CtrlPMRU'

" nerdtree
nnoremap <C-n> :NERDTreeToggle<cr>

augroup FileType go
  au!
  au FileType go nmap <Leader>d <Plug>(go-def)
  au FileType go nmap <Leader>s <Plug>(go-implements)
  au FileType go nmap <Leader>i <Plug>(go-info)
  au FileType go nmap <leader>c <Plug>(go-coverage)
  au FileType go nmap <Leader>e <Plug>(go-rename)
  au FileType go nmap <leader>b <Plug>(go-build)

  au FileType go nmap <Leader>ds <Plug>(go-def-split)
  au FileType go nmap <Leader>dv <Plug>(go-def-vertical)

  au FileType go nmap <Leader>gd <Plug>(go-doc)
  au FileType go nmap <Leader>gv <Plug>(go-doc-vertical)
  au FileType go nmap <Leader>gb <Plug>(go-doc-browser)
augroup END

" Mix Format
let g:mix_format_on_save = 1
let g:mix_format_silent_errors = 1

" Markdown
let g:vim_markdown_folding_disabled = 1

nnoremap <C-S> yiw:%s/<C-r>"/<C-r>"/gc<Left><Left><Left>
vnoremap <C-S> y:%s/<C-r>"/<C-r>"/gc<Left><Left><Left>

nmap <silent> <leader>n :silent :nohlsearch<cr>

inoremap <expr> <cr> pumvisible() ? "\<C-y>" : "\<C-g>u\<CR>"
inoremap <silent><expr> <c-space> coc#refresh()
inoremap <expr> <Tab> pumvisible() ? "\<C-n>" : "\<Tab>"
inoremap <expr> <S-Tab> pumvisible() ? "\<C-p>" : "\<S-Tab>"


nnoremap <nowait><expr> <C-f> coc#float#has_scroll() ? coc#float#scroll(1) : "\<C-f>"
nnoremap <nowait><expr> <C-b> coc#float#has_scroll() ? coc#float#scroll(0) : "\<C-b>"
inoremap <nowait><expr> <C-f> coc#float#has_scroll() ? "\<c-r>=coc#float#scroll(1)\<cr>" : "\<Right>"
inoremap <nowait><expr> <C-b> coc#float#has_scroll() ? "\<c-r>=coc#float#scroll(0)\<cr>" : "\<Left>"

